# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-27 19:38
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import extras.models
import utilities.fields


class Migration(migrations.Migration):

    dependencies = [
        ('tenancy', '0003_unicode_literals'),
        ('dcim', '0048_rack_serial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RackFurniture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(blank=True)),
                ('serial', models.CharField(blank=True, max_length=50, verbose_name='Serial number')),
                ('asset_tag', utilities.fields.NullableCharField(blank=True, help_text='A unique tag used to identify this furniture', max_length=50, null=True, unique=True, verbose_name='Asset tag')),
                ('position', models.PositiveSmallIntegerField(help_text='The lowest-numbered unit occupied by the furniture', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Position (U)')),
                ('face', models.PositiveSmallIntegerField(blank=True, choices=[[0, 'Front'], [1, 'Rear']], null=True, verbose_name='Rack face')),
                ('status', models.PositiveSmallIntegerField(choices=[[1, 'Active'], [0, 'Offline'], [2, 'Planned'], [3, 'Staged'], [4, 'Failed'], [5, 'Inventory']], default=1, verbose_name='Status')),
                ('rack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='furniture', to='dcim.Rack')),
            ],
            bases=(models.Model, extras.models.CustomFieldModel),
        ),
        migrations.CreateModel(
            name='RackFurnitureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', utilities.fields.ColorField(max_length=6)),
                ('model', models.CharField(blank=True, help_text='Model number (optional)', max_length=50)),
                ('slug', models.SlugField()),
                ('part_number', models.CharField(blank=True, help_text='Discrete part number (optional)', max_length=50)),
                ('u_height', models.PositiveSmallIntegerField(default=1, verbose_name='Height (U)')),
                ('is_full_depth', models.BooleanField(default=True, help_text='Furniture consumes both front and rear rack faces', verbose_name='Is full depth')),
                ('comments', models.TextField(blank=True)),
                ('manufacturer', models.ForeignKey(help_text='Manufacturer (optional)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rack_furniture_types', to='dcim.Manufacturer')),
            ],
            options={
                'ordering': ['manufacturer', 'model', 'name'],
            },
            bases=(models.Model, extras.models.CustomFieldModel),
        ),
        migrations.AddField(
            model_name='rackfurniture',
            name='rack_furniture_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instances', to='dcim.RackFurnitureType'),
        ),
        migrations.AddField(
            model_name='rackfurniture',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='furniture', to='dcim.Site'),
        ),
        migrations.AddField(
            model_name='rackfurniture',
            name='tenant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='furniture', to='tenancy.Tenant'),
        ),
        migrations.AlterUniqueTogether(
            name='rackfurnituretype',
            unique_together=set([('manufacturer', 'slug'), ('manufacturer', 'model')]),
        ),
        migrations.AlterUniqueTogether(
            name='rackfurniture',
            unique_together=set([('rack', 'position', 'face')]),
        ),
    ]
